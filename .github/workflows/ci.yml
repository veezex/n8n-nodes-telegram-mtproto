name: CI Checks

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

jobs:
  lint-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run formatting check
        run: |
          bun run format
          if [[ -n $(git diff --exit-code) ]]; then
            echo "Code is not properly formatted. Please run 'bun run format' locally."
            exit 1
          fi

      - name: Run linting
        run: bun run lint

      - name: Build project
        run: bun run build

      - name: Verify build output
        run: |
          echo "Checking dist folder..."
          ls -la dist/
          echo "Verifying credentials files..."
          ls -la dist/credentials/
          echo "Verifying nodes files..."
          ls -la dist/nodes/

      - name: Check package.json configuration
        run: |
          echo "Validating n8n configuration..."
          bun --print "JSON.stringify(require('./package.json').n8n, null, 2)"

  dependency-audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run security audit
        run: |
          echo "Running dependency audit..."
          bun audit || echo "Audit completed with warnings"

  validate-package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build project
        run: bun run build

      - name: Validate package can be packed
        run: |
          npm pack --dry-run
          echo "Package validation successful!"

      - name: Check required files
        run: |
          echo "Checking required files for npm package..."
          if [[ ! -f "package.json" ]]; then
            echo "❌ package.json is missing"
            exit 1
          fi
          if [[ ! -f "README.md" ]]; then
            echo "❌ README.md is missing"
            exit 1
          fi
          if [[ ! -f "LICENSE.md" ]]; then
            echo "❌ LICENSE.md is missing"
            exit 1
          fi
          if [[ ! -d "dist" ]]; then
            echo "❌ dist folder is missing"
            exit 1
          fi
          echo "✅ All required files are present"
